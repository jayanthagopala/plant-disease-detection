"""Multilingual support for the Smart Crop Advisory System."""

from typing import Dict, Any
import streamlit as st

# Translation dictionaries
TRANSLATIONS = {
    "en": {
        "app_title": "ЁЯМ▒ Plant Disease Detection for Indian Farmers",
        "app_subtitle": "Upload an image of your plant to detect diseases and get treatment recommendations",
        "demo_notice": "ЁЯЪА **Demo Mode**: This is a demonstration using mock data. Upload any image to see how the system works!",
        "settings": "тЪЩя╕П Settings",
        "select_model": "Select Model",
        "device": "Device",
        "confidence_threshold": "Confidence Threshold",
        "crop_type": "Crop Type",
        "load_model": "ЁЯФД Load Model",
        "model_loaded": "Mock model loaded successfully!",
        "model_failed": "Failed to load model!",
        "model_ready": "Mock model ready!",
        "show_performance": "Show Model Performance",
        "model_performance": "ЁЯУК Model Performance",
        "accuracy": "Accuracy",
        "precision": "Precision",
        "recall": "Recall",
        "f1_score": "F1-Score",
        "disease_detection": "ЁЯФН Disease Detection",
        "model_info": "ЁЯУК Model Info",
        "disease_database": "ЁЯУЪ Disease Database",
        "upload_image": "ЁЯУд Upload Image",
        "choose_image": "Choose an image file",
        "upload_help": "Upload an image of a plant leaf to detect diseases",
        "analysis": "ЁЯФН Analysis",
        "uploaded_image": "Uploaded Image",
        "image_info": "Image Information",
        "width": "Width",
        "height": "Height",
        "format": "Format",
        "mode": "Mode",
        "analyze_image": "ЁЯФН Analyze Image",
        "load_model_first": "Please load a model first!",
        "analyzing": "Analyzing image...",
        "no_predictions": "No predictions above confidence threshold of",
        "prediction_error": "Error during prediction:",
        "upload_prompt": "Please upload an image or select a sample image to get started.",
        "prediction_results": "ЁЯФН Prediction Results",
        "all_predictions": "All Predictions",
        "confidence": "Confidence",
        "disease_info": "ЁЯУЛ Disease Information",
        "symptoms": "Symptoms",
        "treatment": "Treatment",
        "prevention": "Prevention",
        "model_details": "Model Details",
        "model_type": "Model Type",
        "input_size": "Input Size",
        "num_classes": "Number of Classes",
        "model_size": "Model Size",
        "training_accuracy": "Training Accuracy",
        "validation_accuracy": "Validation Accuracy",
        "performance_metrics": "Model Performance Metrics",
        "diseases": "Diseases",
        "weather_forecast": "ЁЯМдя╕П Weather Forecast",
        "market_prices": "ЁЯТ░ Market Prices",
        "soil_health": "ЁЯМ▒ Soil Health",
        "current_weather": "Current Weather",
        "temperature": "Temperature",
        "humidity": "Humidity",
        "rainfall": "Rainfall",
        "wind_speed": "Wind Speed",
        "weather_alert": "Weather Alert",
        "crop_prices": "Crop Prices",
        "price_per_quintal": "Price per Quintal",
        "market_trend": "Market Trend",
        "price_change": "Price Change",
        "recommendations": "Recommendations",
        "fertilizer_advice": "Fertilizer Advice",
        "irrigation_advice": "Irrigation Advice",
        "pest_control": "Pest Control",
        "language": "Language",
        "select_language": "Select Language",
        "weather_conditions": "Weather Conditions",
        "weather_description": "Weather Description",
        "cloud_cover": "Cloud Cover",
        "wind_direction": "Wind Direction",
        "atmospheric_pressure": "Atmospheric Pressure",
        "last_updated": "Last Updated",
        "detailed_forecast": "Detailed Forecast",
        "historical_weather": "Historical Weather",
        "weather_recommendations": "Weather-Based Recommendations",
        "irrigation_recommendations": "Irrigation Recommendations",
        "crop_protection_recommendations": "Crop Protection Recommendations",
        "disease_prevention_recommendations": "Disease Prevention Recommendations",
        "drainage_recommendations": "Drainage Recommendations",
        "crop_specific_recommendations": "Crop-Specific Recommendations",
        "other_recommendations": "Other Recommendations",
        "action": "Action",
        "weather_alerts": "Weather Alerts",
        "no_weather_alerts": "No weather alerts at this time. Conditions are normal.",
        "weather_summary": "Weather Summary",
        "forecast_available": "7-day forecast available",
        "temperature_forecast": "Temperature Forecast",
        "precipitation_forecast": "Precipitation Forecast",
        "rain_probability": "Rain Probability (%)",
        "max_temp": "Max Temp (┬░C)",
        "min_temp": "Min Temp (┬░C)",
        "precipitation_mm": "Precipitation (mm)",
        "weather": "Weather",
        "historical_trends": "Historical Temperature Trends",
        "select_city": "Select Your City"
    },
    "hi": {
        "app_title": "ЁЯМ▒ рднрд╛рд░рддреАрдп рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдкреМрдзреЗ рдХреА рдмреАрдорд╛рд░реА рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдирд╛",
        "app_subtitle": "рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдиреЗ рдФрд░ рдЙрдкрдЪрд╛рд░ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдкрдиреЗ рдкреМрдзреЗ рдХреА рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "demo_notice": "ЁЯЪА **рдбреЗрдореЛ рдореЛрдб**: рдпрд╣ рдореЙрдХ рдбреЗрдЯрд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдПрдХ рдкреНрд░рджрд░реНрд╢рди рд╣реИред рд╕рд┐рд╕реНрдЯрдо рдХреИрд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ рдпрд╣ рджреЗрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдХреЛрдИ рднреА рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ!",
        "settings": "тЪЩя╕П рд╕реЗрдЯрд┐рдВрдЧреНрд╕",
        "select_model": "рдореЙрдбрд▓ рдЪреБрдиреЗрдВ",
        "device": "рдбрд┐рд╡рд╛рдЗрд╕",
        "confidence_threshold": "рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реАрдорд╛",
        "crop_type": "рдлрд╕рд▓ рдХрд╛ рдкреНрд░рдХрд╛рд░",
        "load_model": "ЁЯФД рдореЙрдбрд▓ рд▓реЛрдб рдХрд░реЗрдВ",
        "model_loaded": "рдореЙрдХ рдореЙрдбрд▓ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд▓реЛрдб рд╣реЛ рдЧрдпрд╛!",
        "model_failed": "рдореЙрдбрд▓ рд▓реЛрдб рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓!",
        "model_ready": "рдореЙрдХ рдореЙрдбрд▓ рддреИрдпрд╛рд░!",
        "show_performance": "рдореЙрдбрд▓ рдкреНрд░рджрд░реНрд╢рди рджрд┐рдЦрд╛рдПрдВ",
        "model_performance": "ЁЯУК рдореЙрдбрд▓ рдкреНрд░рджрд░реНрд╢рди",
        "accuracy": "рд╕рдЯреАрдХрддрд╛",
        "precision": "рдкрд░рд┐рд╢реБрджреНрдзрддрд╛",
        "recall": "рд░рд┐рдХреЙрд▓",
        "f1_score": "F1-рд╕реНрдХреЛрд░",
        "disease_detection": "ЁЯФН рдмреАрдорд╛рд░реА рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдирд╛",
        "model_info": "ЁЯУК рдореЙрдбрд▓ рдЬрд╛рдирдХрд╛рд░реА",
        "disease_database": "ЁЯУЪ рдмреАрдорд╛рд░реА рдбреЗрдЯрд╛рдмреЗрд╕",
        "upload_image": "ЁЯУд рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "choose_image": "рдПрдХ рдЫрд╡рд┐ рдлрд╝рд╛рдЗрд▓ рдЪреБрдиреЗрдВ",
        "upload_help": "рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХрд╛ рдкрддрд╛ рд▓рдЧрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдкреМрдзреЗ рдХреА рдкрддреНрддреА рдХреА рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        "analysis": "ЁЯФН рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
        "uploaded_image": "рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рдЫрд╡рд┐",
        "image_info": "рдЫрд╡рд┐ рдЬрд╛рдирдХрд╛рд░реА",
        "width": "рдЪреМрдбрд╝рд╛рдИ",
        "height": "рдКрдВрдЪрд╛рдИ",
        "format": "рдкреНрд░рд╛рд░реВрдк",
        "mode": "рдореЛрдб",
        "analyze_image": "ЁЯФН рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ",
        "load_model_first": "рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ рдПрдХ рдореЙрдбрд▓ рд▓реЛрдб рдХрд░реЗрдВ!",
        "analyzing": "рдЫрд╡рд┐ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░ рд░рд╣реЗ рд╣реИрдВ...",
        "no_predictions": "рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рд╕реАрдорд╛ рд╕реЗ рдКрдкрд░ рдХреЛрдИ рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдирд╣реАрдВ",
        "prediction_error": "рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдХреЗ рджреМрд░рд╛рди рддреНрд░реБрдЯрд┐:",
        "upload_prompt": "рдХреГрдкрдпрд╛ рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдпрд╛ рдПрдХ рдирдореВрдирд╛ рдЫрд╡рд┐ рдЪреБрдиреЗрдВред",
        "prediction_results": "ЁЯФН рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА рдкрд░рд┐рдгрд╛рдо",
        "all_predictions": "рд╕рднреА рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгрд┐рдпрд╛рдВ",
        "confidence": "рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕",
        "disease_info": "ЁЯУЛ рдмреАрдорд╛рд░реА рдХреА рдЬрд╛рдирдХрд╛рд░реА",
        "symptoms": "рд▓рдХреНрд╖рдг",
        "treatment": "рдЙрдкрдЪрд╛рд░",
        "prevention": "рд░реЛрдХрдерд╛рдо",
        "model_details": "рдореЙрдбрд▓ рд╡рд┐рд╡рд░рдг",
        "model_type": "рдореЙрдбрд▓ рдкреНрд░рдХрд╛рд░",
        "input_size": "рдЗрдирдкреБрдЯ рдЖрдХрд╛рд░",
        "num_classes": "рдХрдХреНрд╖рд╛рдУрдВ рдХреА рд╕рдВрдЦреНрдпрд╛",
        "model_size": "рдореЙрдбрд▓ рдЖрдХрд╛рд░",
        "training_accuracy": "рдкреНрд░рд╢рд┐рдХреНрд╖рдг рд╕рдЯреАрдХрддрд╛",
        "validation_accuracy": "рд╕рддреНрдпрд╛рдкрди рд╕рдЯреАрдХрддрд╛",
        "performance_metrics": "рдореЙрдбрд▓ рдкреНрд░рджрд░реНрд╢рди рдореЗрдЯреНрд░рд┐рдХреНрд╕",
        "diseases": "рдмреАрдорд╛рд░рд┐рдпрд╛рдВ",
        "weather_forecast": "ЁЯМдя╕П рдореМрд╕рдо рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди",
        "market_prices": "ЁЯТ░ рдмрд╛рдЬрд╛рд░ рдореВрд▓реНрдп",
        "soil_health": "ЁЯМ▒ рдорд┐рдЯреНрдЯреА рдХрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп",
        "current_weather": "рд╡рд░реНрддрдорд╛рди рдореМрд╕рдо",
        "temperature": "рддрд╛рдкрдорд╛рди",
        "humidity": "рдЖрд░реНрджреНрд░рддрд╛",
        "rainfall": "рд╡рд░реНрд╖рд╛",
        "wind_speed": "рд╣рд╡рд╛ рдХреА рдЧрддрд┐",
        "weather_alert": "рдореМрд╕рдо рдЪреЗрддрд╛рд╡рдиреА",
        "crop_prices": "рдлрд╕рд▓ рдореВрд▓реНрдп",
        "price_per_quintal": "рдкреНрд░рддрд┐ рдХреНрд╡рд┐рдВрдЯрд▓ рдореВрд▓реНрдп",
        "market_trend": "рдмрд╛рдЬрд╛рд░ рдкреНрд░рд╡реГрддреНрддрд┐",
        "price_change": "рдореВрд▓реНрдп рдкрд░рд┐рд╡рд░реНрддрди",
        "recommendations": "рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "fertilizer_advice": "рдЙрд░реНрд╡рд░рдХ рд╕рд▓рд╛рд╣",
        "irrigation_advice": "рд╕рд┐рдВрдЪрд╛рдИ рд╕рд▓рд╛рд╣",
        "pest_control": "рдХреАрдЯ рдирд┐рдпрдВрддреНрд░рдг",
        "language": "рднрд╛рд╖рд╛",
        "select_language": "рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ",
        "weather_conditions": "рдореМрд╕рдо рдХреА рд╕реНрдерд┐рддрд┐",
        "weather_description": "рдореМрд╕рдо рдХрд╛ рд╡рд┐рд╡рд░рдг",
        "cloud_cover": "рдмрд╛рджрд▓ рдЖрд╡рд░рдг",
        "wind_direction": "рд╣рд╡рд╛ рдХреА рджрд┐рд╢рд╛",
        "atmospheric_pressure": "рд╡рд╛рдпреБрдордВрдбрд▓реАрдп рджрдмрд╛рд╡",
        "last_updated": "рдЕрдВрддрд┐рдо рдЕрдкрдбреЗрдЯ",
        "detailed_forecast": "рд╡рд┐рд╕реНрддреГрдд рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди",
        "historical_weather": "рдРрддрд┐рд╣рд╛рд╕рд┐рдХ рдореМрд╕рдо",
        "weather_recommendations": "рдореМрд╕рдо рдЖрдзрд╛рд░рд┐рдд рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "irrigation_recommendations": "рд╕рд┐рдВрдЪрд╛рдИ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "crop_protection_recommendations": "рдлрд╕рд▓ рд╕реБрд░рдХреНрд╖рд╛ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "disease_prevention_recommendations": "рд░реЛрдЧ рдирд┐рд╡рд╛рд░рдг рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "drainage_recommendations": "рдЬрд▓ рдирд┐рдХрд╛рд╕реА рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "crop_specific_recommendations": "рдлрд╕рд▓ рд╡рд┐рд╢рд┐рд╖реНрдЯ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "other_recommendations": "рдЕрдиреНрдп рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ",
        "action": "рдХрд╛рд░реНрдп",
        "weather_alerts": "рдореМрд╕рдо рдЪреЗрддрд╛рд╡рдиреА",
        "no_weather_alerts": "рдЗрд╕ рд╕рдордп рдХреЛрдИ рдореМрд╕рдо рдЪреЗрддрд╛рд╡рдиреА рдирд╣реАрдВ рд╣реИред рд╕реНрдерд┐рддрд┐ рд╕рд╛рдорд╛рдиреНрдп рд╣реИред",
        "weather_summary": "рдореМрд╕рдо рд╕рд╛рд░рд╛рдВрд╢",
        "forecast_available": "7-рджрд┐рди рдХрд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди рдЙрдкрд▓рдмреНрдз",
        "temperature_forecast": "рддрд╛рдкрдорд╛рди рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди",
        "precipitation_forecast": "рд╡рд░реНрд╖рд╛ рдкреВрд░реНрд╡рд╛рдиреБрдорд╛рди",
        "rain_probability": "рдмрд╛рд░рд┐рд╢ рдХреА рд╕рдВрднрд╛рд╡рдирд╛ (%)",
        "max_temp": "рдЕрдзрд┐рдХрддрдо рддрд╛рдкрдорд╛рди (┬░C)",
        "min_temp": "рдиреНрдпреВрдирддрдо рддрд╛рдкрдорд╛рди (┬░C)",
        "precipitation_mm": "рд╡рд░реНрд╖рд╛ (рдорд┐рдореА)",
        "weather": "рдореМрд╕рдо",
        "historical_trends": "рдРрддрд┐рд╣рд╛рд╕рд┐рдХ рддрд╛рдкрдорд╛рди рдкреНрд░рд╡реГрддреНрддрд┐",
        "select_city": "рдЕрдкрдирд╛ рд╢рд╣рд░ рдЪреБрдиреЗрдВ"
    },
    "kn": {
        "app_title": "ЁЯМ▒ р▓нр▓╛р▓░р▓др│Ар▓п р▓░р│Ир▓др▓░р▓┐р▓Чр│Ж р▓╕р▓╕р│Нр▓п р▓░р│Лр▓Ч р▓кр▓др│Нр▓др│Ж",
        "app_subtitle": "р▓░р│Лр▓Чр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр▓др│Нр▓др│Жр▓╣р▓Ър│Нр▓Ър▓▓р│Б р▓ор▓др│Нр▓др│Б р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Жр▓п р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр▓бр│Жр▓пр▓▓р│Б р▓ир▓┐р▓ор│Нр▓о р▓╕р▓╕р│Нр▓пр▓ж р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
        "demo_notice": "ЁЯЪА **р▓бр│Жр▓ор│К р▓ор│Лр▓бр│Н**: р▓Зр▓жр│Б р▓ор▓╛р▓Хр│Н р▓бр│Зр▓Яр▓╛р▓╡р▓ир│Нр▓ир│Б р▓мр▓│р▓╕р▓┐р▓Хр│Кр▓Вр▓бр│Б р▓кр│Нр▓░р▓жр▓░р│Нр▓╢р▓ир▓╡р▓╛р▓Чр▓┐р▓жр│Ж. р▓╕р▓┐р▓╕р│Нр▓Яр▓ор│Н р▓╣р│Зр▓Чр│Ж р▓Хр│Жр▓▓р▓╕ р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓жр│Ж р▓Ор▓Вр▓мр│Бр▓жр▓ир│Нр▓ир│Б р▓ир│Лр▓бр▓▓р│Б р▓пр▓╛р▓╡р│Бр▓жр│З р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐!",
        "settings": "тЪЩя╕П р▓╕р│Жр▓Яр│Нр▓Яр▓┐р▓Вр▓Чр│Нр▓Чр▓│р│Б",
        "select_model": "р▓ор▓╛р▓жр▓░р▓┐р▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
        "device": "р▓╕р▓╛р▓зр▓и",
        "confidence_threshold": "р▓Жр▓др│Нр▓ор▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕ р▓ор▓┐р▓др▓┐",
        "crop_type": "р▓мр│Жр▓│р│Ж р▓кр│Нр▓░р▓Хр▓╛р▓░",
        "load_model": "ЁЯФД р▓ор▓╛р▓жр▓░р▓┐р▓пр▓ир│Нр▓ир│Б р▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
        "model_loaded": "р▓ор▓╛р▓Хр│Н р▓ор▓╛р▓жр▓░р▓┐ р▓пр▓╢р▓╕р│Нр▓╡р▓┐р▓пр▓╛р▓Чр▓┐ р▓▓р│Лр▓бр│Н р▓Жр▓пр▓┐р▓др│Б!",
        "model_failed": "р▓ор▓╛р▓жр▓░р▓┐р▓пр▓ир│Нр▓ир│Б р▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓▓р│Б р▓╡р▓┐р▓лр▓▓р▓╡р▓╛р▓Чр▓┐р▓жр│Ж!",
        "model_ready": "р▓ор▓╛р▓Хр│Н р▓ор▓╛р▓жр▓░р▓┐ р▓╕р▓┐р▓жр│Нр▓зр▓╡р▓╛р▓Чр▓┐р▓жр│Ж!",
        "show_performance": "р▓ор▓╛р▓жр▓░р▓┐ р▓Хр▓╛р▓░р│Нр▓пр▓Хр│Нр▓╖р▓ор▓др│Жр▓пр▓ир│Нр▓ир│Б р▓др│Лр▓░р▓┐р▓╕р▓┐",
        "model_performance": "ЁЯУК р▓ор▓╛р▓жр▓░р▓┐ р▓Хр▓╛р▓░р│Нр▓пр▓Хр│Нр▓╖р▓ор▓др│Ж",
        "accuracy": "р▓ир▓┐р▓Цр▓░р▓др│Ж",
        "precision": "р▓╕р│Нр▓кр▓╖р│Нр▓Яр▓др│Ж",
        "recall": "р▓░р▓┐р▓Хр▓╛р▓▓р│Н",
        "f1_score": "F1-р▓╕р│Нр▓Хр│Лр▓░р│Н",
        "disease_detection": "ЁЯФН р▓░р│Лр▓Ч р▓кр▓др│Нр▓др│Ж",
        "model_info": "ЁЯУК р▓ор▓╛р▓жр▓░р▓┐ р▓ор▓╛р▓╣р▓┐р▓др▓┐",
        "disease_database": "ЁЯУЪ р▓░р│Лр▓Ч р▓бр│Зр▓Яр▓╛р▓мр│Зр▓╕р│Н",
        "upload_image": "ЁЯУд р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
        "choose_image": "р▓Ър▓┐р▓др│Нр▓░ р▓лр│Ир▓▓р│Н р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
        "upload_help": "р▓░р│Лр▓Чр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр▓др│Нр▓др│Жр▓╣р▓Ър│Нр▓Ър▓▓р│Б р▓╕р▓╕р│Нр▓пр▓ж р▓Ор▓▓р│Жр▓п р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐",
        "analysis": "ЁЯФН р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓гр│Ж",
        "uploaded_image": "р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐р▓ж р▓Ър▓┐р▓др│Нр▓░",
        "image_info": "р▓Ър▓┐р▓др│Нр▓░ р▓ор▓╛р▓╣р▓┐р▓др▓┐",
        "width": "р▓Ер▓Чр▓▓",
        "height": "р▓Ор▓др│Нр▓др▓░",
        "format": "р▓╕р│Нр▓╡р▓░р│Вр▓к",
        "mode": "р▓ор│Лр▓бр│Н",
        "analyze_image": "ЁЯФН р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓┐р▓╕р▓┐",
        "load_model_first": "р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓ор│Кр▓жр▓▓р│Б р▓ор▓╛р▓жр▓░р▓┐р▓пр▓ир│Нр▓ир│Б р▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐!",
        "analyzing": "р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓╡р▓┐р▓╢р│Нр▓▓р│Зр▓╖р▓┐р▓╕р│Бр▓др│Нр▓др▓┐р▓жр│Ж...",
        "no_predictions": "р▓Жр▓др│Нр▓ор▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕ р▓ор▓┐р▓др▓┐р▓Чр▓┐р▓Вр▓д р▓╣р│Жр▓Ър│Нр▓Ър▓┐р▓и р▓пр▓╛р▓╡р│Бр▓жр│З р▓нр▓╡р▓┐р▓╖р│Нр▓пр▓╡р▓╛р▓гр▓┐р▓Чр▓│р▓┐р▓▓р│Нр▓▓",
        "prediction_error": "р▓нр▓╡р▓┐р▓╖р│Нр▓пр▓╡р▓╛р▓гр▓┐р▓п р▓╕р▓ор▓пр▓жр▓▓р│Нр▓▓р▓┐ р▓жр│Лр▓╖:",
        "upload_prompt": "р▓жр▓пр▓╡р▓┐р▓Яр│Нр▓Яр│Б р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓┐р▓╕р▓▓р│Б р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Ер▓кр│Нр▓▓р│Лр▓бр│Н р▓ор▓╛р▓бр▓┐ р▓Ер▓ер▓╡р▓╛ р▓ор▓╛р▓жр▓░р▓┐ р▓Ър▓┐р▓др│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐.",
        "prediction_results": "ЁЯФН р▓нр▓╡р▓┐р▓╖р│Нр▓пр▓╡р▓╛р▓гр▓┐ р▓лр▓▓р▓┐р▓др▓╛р▓Вр▓╢р▓Чр▓│р│Б",
        "all_predictions": "р▓Ор▓▓р│Нр▓▓р▓╛ р▓нр▓╡р▓┐р▓╖р│Нр▓пр▓╡р▓╛р▓гр▓┐р▓Чр▓│р│Б",
        "confidence": "р▓Жр▓др│Нр▓ор▓╡р▓┐р▓╢р│Нр▓╡р▓╛р▓╕",
        "disease_info": "ЁЯУЛ р▓░р│Лр▓Ч р▓ор▓╛р▓╣р▓┐р▓др▓┐",
        "symptoms": "р▓▓р▓Хр│Нр▓╖р▓гр▓Чр▓│р│Б",
        "treatment": "р▓Ър▓┐р▓Хр▓┐р▓др│Нр▓╕р│Ж",
        "prevention": "р▓др▓бр│Жр▓Чр▓Яр│Нр▓Яр│Бр▓╡р▓┐р▓Хр│Ж",
        "model_details": "р▓ор▓╛р▓жр▓░р▓┐ р▓╡р▓┐р▓╡р▓░р▓Чр▓│р│Б",
        "model_type": "р▓ор▓╛р▓жр▓░р▓┐ р▓кр│Нр▓░р▓Хр▓╛р▓░",
        "input_size": "р▓Зр▓ир│Нр▓кр│Бр▓Яр│Н р▓Чр▓╛р▓др│Нр▓░",
        "num_classes": "р▓╡р▓░р│Нр▓Чр▓Чр▓│ р▓╕р▓Вр▓Цр│Нр▓пр│Ж",
        "model_size": "р▓ор▓╛р▓жр▓░р▓┐ р▓Чр▓╛р▓др│Нр▓░",
        "training_accuracy": "р▓др▓░р▓мр│Зр▓др▓┐ р▓ир▓┐р▓Цр▓░р▓др│Ж",
        "validation_accuracy": "р▓кр▓░р▓┐р▓╢р│Ар▓▓р▓ир│Ж р▓ир▓┐р▓Цр▓░р▓др│Ж",
        "performance_metrics": "р▓ор▓╛р▓жр▓░р▓┐ р▓Хр▓╛р▓░р│Нр▓пр▓Хр│Нр▓╖р▓ор▓др│Ж р▓ор│Жр▓Яр│Нр▓░р▓┐р▓Хр│Нр▓Чр▓│р│Б",
        "diseases": "р▓░р│Лр▓Чр▓Чр▓│р│Б",
        "weather_forecast": "ЁЯМдя╕П р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓ор│Бр▓ир│Нр▓╕р│Вр▓Ър▓ир│Ж",
        "market_prices": "ЁЯТ░ р▓ор▓╛р▓░р│Бр▓Хр▓Яр│Нр▓Яр│Ж р▓мр│Жр▓▓р│Жр▓Чр▓│р│Б",
        "soil_health": "ЁЯМ▒ р▓ор▓гр│Нр▓гр▓┐р▓и р▓Жр▓░р│Лр▓Чр│Нр▓п",
        "current_weather": "р▓кр│Нр▓░р▓╕р│Нр▓др│Бр▓д р▓╣р▓╡р▓╛р▓ор▓╛р▓и",
        "temperature": "р▓др▓╛р▓кр▓ор▓╛р▓и",
        "humidity": "р▓Жр▓░р│Нр▓жр│Нр▓░р▓др│Ж",
        "rainfall": "р▓ор▓│р│Ж",
        "wind_speed": "р▓Чр▓╛р▓│р▓┐р▓п р▓╡р│Зр▓Ч",
        "weather_alert": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Ж",
        "crop_prices": "р▓мр│Жр▓│р│Ж р▓мр│Жр▓▓р│Жр▓Чр▓│р│Б",
        "price_per_quintal": "р▓кр│Нр▓░р▓др▓┐ р▓Хр│Нр▓╡р▓┐р▓Вр▓Яр▓▓р│Н р▓мр│Жр▓▓р│Ж",
        "market_trend": "р▓ор▓╛р▓░р│Бр▓Хр▓Яр│Нр▓Яр│Ж р▓кр│Нр▓░р▓╡р│Гр▓др│Нр▓др▓┐",
        "price_change": "р▓мр│Жр▓▓р│Ж р▓мр▓жр▓▓р▓╛р▓╡р▓гр│Ж",
        "recommendations": "р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "fertilizer_advice": "р▓Ор▓░р▓Х р▓╕р▓▓р▓╣р│Ж",
        "irrigation_advice": "р▓ир│Ар▓░р▓╛р▓╡р▓░р▓┐ р▓╕р▓▓р▓╣р│Ж",
        "pest_control": "р▓Хр│Ар▓Я р▓ир▓┐р▓пр▓Вр▓др│Нр▓░р▓г",
        "language": "р▓нр▓╛р▓╖р│Ж",
        "select_language": "р▓нр▓╛р▓╖р│Жр▓пр▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐",
        "weather_conditions": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓кр▓░р▓┐р▓╕р│Нр▓ер▓┐р▓др▓┐р▓Чр▓│р│Б",
        "weather_description": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓╡р▓┐р▓╡р▓░р▓гр│Ж",
        "cloud_cover": "р▓ор│Лр▓бр▓ж р▓Жр▓╡р▓░р▓г",
        "wind_direction": "р▓Чр▓╛р▓│р▓┐р▓п р▓жр▓┐р▓Хр│Нр▓Хр│Б",
        "atmospheric_pressure": "р▓╡р▓╛р▓пр│Бр▓ор▓Вр▓бр▓▓р▓ж р▓Тр▓др│Нр▓др▓б",
        "last_updated": "р▓Хр│Кр▓ир│Жр▓п р▓ир▓╡р│Ар▓Хр▓░р▓г",
        "detailed_forecast": "р▓╡р▓┐р▓╡р▓░р▓╡р▓╛р▓ж р▓ор│Бр▓ир│Нр▓╕р│Вр▓Ър▓ир│Ж",
        "historical_weather": "р▓Рр▓др▓┐р▓╣р▓╛р▓╕р▓┐р▓Х р▓╣р▓╡р▓╛р▓ор▓╛р▓и",
        "weather_recommendations": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Жр▓зр▓╛р▓░р▓┐р▓д р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "irrigation_recommendations": "р▓ир│Ар▓░р▓╛р▓╡р▓░р▓┐ р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "crop_protection_recommendations": "р▓мр│Жр▓│р│Ж р▓░р▓Хр│Нр▓╖р▓гр│Ж р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "disease_prevention_recommendations": "р▓░р│Лр▓Ч р▓др▓бр│Жр▓Чр▓Яр│Нр▓Яр│Бр▓╡р▓┐р▓Хр│Ж р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "drainage_recommendations": "р▓Ьр▓▓р▓ир▓┐р▓Хр▓╛р▓╕ р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "crop_specific_recommendations": "р▓мр│Жр▓│р│Ж-р▓ир▓┐р▓░р│Нр▓жр▓┐р▓╖р│Нр▓Я р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "other_recommendations": "р▓Зр▓др▓░ р▓╢р▓┐р▓лр▓╛р▓░р▓╕р│Бр▓Чр▓│р│Б",
        "action": "р▓Хр│Нр▓░р▓┐р▓пр│Ж",
        "weather_alerts": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р│Б",
        "no_weather_alerts": "р▓И р▓╕р▓ор▓пр▓жр▓▓р│Нр▓▓р▓┐ р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓Ор▓Ър│Нр▓Ър▓░р▓┐р▓Хр│Жр▓Чр▓│р▓┐р▓▓р│Нр▓▓. р▓кр▓░р▓┐р▓╕р│Нр▓ер▓┐р▓др▓┐р▓Чр▓│р│Б р▓╕р▓╛р▓ор▓╛р▓ир│Нр▓пр▓╡р▓╛р▓Чр▓┐р▓╡р│Ж.",
        "weather_summary": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и р▓╕р▓╛р▓░р▓╛р▓Вр▓╢",
        "forecast_available": "7-р▓жр▓┐р▓ир▓ж р▓ор│Бр▓ир│Нр▓╕р│Вр▓Ър▓ир│Ж р▓▓р▓нр│Нр▓п",
        "temperature_forecast": "р▓др▓╛р▓кр▓ор▓╛р▓и р▓ор│Бр▓ир│Нр▓╕р│Вр▓Ър▓ир│Ж",
        "precipitation_forecast": "р▓ор▓│р│Ж р▓ор│Бр▓ир│Нр▓╕р│Вр▓Ър▓ир│Ж",
        "rain_probability": "р▓ор▓│р│Ж р▓╕р▓Вр▓нр▓╛р▓╡р│Нр▓пр▓др│Ж (%)",
        "max_temp": "р▓Чр▓░р▓┐р▓╖р│Нр▓а р▓др▓╛р▓кр▓ор▓╛р▓и (┬░C)",
        "min_temp": "р▓Хр▓ир▓┐р▓╖р│Нр▓а р▓др▓╛р▓кр▓ор▓╛р▓и (┬░C)",
        "precipitation_mm": "р▓ор▓│р│Ж (р▓ор▓┐р▓ор│А)",
        "weather": "р▓╣р▓╡р▓╛р▓ор▓╛р▓и",
        "historical_trends": "р▓Рр▓др▓┐р▓╣р▓╛р▓╕р▓┐р▓Х р▓др▓╛р▓кр▓ор▓╛р▓и р▓кр│Нр▓░р▓╡р│Гр▓др│Нр▓др▓┐р▓Чр▓│р│Б",
        "select_city": "р▓ир▓┐р▓ор│Нр▓о р▓ир▓Чр▓░р▓╡р▓ир│Нр▓ир│Б р▓Жр▓пр│Нр▓Хр│Жр▓ор▓╛р▓бр▓┐"
    }
}

def get_translation(key: str, language: str = "en") -> str:
    """Get translation for a given key and language."""
    return TRANSLATIONS.get(language, TRANSLATIONS["en"]).get(key, key)

def get_current_language() -> str:
    """Get current language from session state."""
    return st.session_state.get("language", "en")

def set_language(language: str) -> None:
    """Set language in session state."""
    st.session_state.language = language

def create_language_selector() -> str:
    """Create language selector component."""
    languages = {
        "English": "en",
        "рд╣рд┐рдиреНрджреА": "hi", 
        "р▓Хр▓ир│Нр▓ир▓б": "kn"
    }
    
    current_lang = get_current_language()
    current_display = next(k for k, v in languages.items() if v == current_lang)
    
    selected_display = st.selectbox(
        "ЁЯМР Language / рднрд╛рд╖рд╛ / р▓нр▓╛р▓╖р│Ж",
        list(languages.keys()),
        index=list(languages.keys()).index(current_display),
        help="Select your preferred language"
    )
    
    selected_lang = languages[selected_display]
    if selected_lang != current_lang:
        set_language(selected_lang)
        st.rerun()
    
    return selected_lang
